import random
import requests
import spacy
import datetime

# Load spaCy's English model
nlp = spacy.load("en_core_web_sm")

# Define intents and responses
intents = {
    "greeting": ["Hello! How can I assist you?", "Hi there! What can I do for you today?"],
    "goodbye": ["Goodbye! Have a great day!", "Bye! Take care!"],
    "help": [
        "You can ask me about the weather, request a joke, or say 'quit' to exit. How can I assist you?"
    ],
    "default": ["I'm not sure I understand. Could you rephrase?", "Can you tell me more about that?"]
}

# OpenWeatherMap API settings
WEATHER_API_KEY = "98543ed2ef9e000b6e6977e00f7ba7a5"
WEATHER_API_URL = "http://api.openweathermap.org/data/2.5/weather"

# Joke API settings
JOKE_API_URL = "https://v2.jokeapi.dev/joke/Any"

# Helper function to detect intent
def detect_intent(user_input):
    doc = nlp(user_input)
    if any(token.lower_ in ["hello", "hi", "hey"] for token in doc):
        return "greeting"
    elif any(token.lower_ in ["weather", "rain", "sunny", "forecast"] for token in doc):
        return "weather"
    elif "joke" in user_input.lower():
        return "joke"
    elif any(token.lower_ in ["bye", "goodbye", "quit"] for token in doc):
        return "goodbye"
    elif "help" in user_input.lower():
        return "help"
    else:
        return "default"

# Get real-time weather using OpenWeatherMap API
def get_weather(city):
    try:
        params = {"q": city, "appid": WEATHER_API_KEY, "units": "metric"}
        response = requests.get(WEATHER_API_URL, params=params)
        data = response.json()
        if response.status_code == 200:
            weather = data["weather"][0]["description"].capitalize()
            temp = data["main"]["temp"]
            return f"The current weather in {city} is {weather} with a temperature of {temp}Â°C."
        else:
            return "Sorry, I couldn't find the weather for that location. Please try again."
    except Exception as e:
        return "There was an error retrieving the weather. Please try later."

# Get a random joke using JokeAPI
def get_joke():
    try:
        response = requests.get(JOKE_API_URL)
        data = response.json()
        if "joke" in data:
            return data["joke"]
        elif "setup" in data and "delivery" in data:
            return f"{data['setup']} ... {data['delivery']}"
        else:
            return "I couldn't fetch a joke right now. Please try again later."
    except Exception as e:
        return "There was an error fetching a joke. Please try later."

# Dynamic greeting based on the time of day
def get_greeting():
    current_hour = datetime.datetime.now().hour
    if current_hour < 12:
        return "Good morning! How can I assist you today?"
    elif 12 <= current_hour < 18:
        return "Good afternoon! What can I help you with?"
    else:
        return "Good evening! What do you need assistance with?"

# Main chatbot interface
def chatbot_interface():
    print(f"ChatBot: {get_greeting()}")
    user_name = None  # To store the user's name
    
    while True:
        user_input = input("You: ").strip()
        
        # Detect intent
        intent = detect_intent(user_input)
        
        # Handle quit intent
        if intent == "goodbye":
            print("ChatBot: Goodbye! Have a great day!")
            break
        
        # Handle name input
        if "my name is" in user_input.lower():
            user_name = user_input.split("my name is")[-1].strip().capitalize()
            print(f"ChatBot: Nice to meet you, {user_name}!")
            continue
        
        # Handle weather intent
        if intent == "weather":
            print("ChatBot: Which city do you want the weather for?")
            city = input("You: ").strip()
            response = get_weather(city)
            print(f"ChatBot: {response}")
            continue
        
        # Handle joke intent
        if intent == "joke":
            response = get_joke()
            print(f"ChatBot: {response}")
            continue
        
        # Generate response for other intents
        response = random.choice(intents[intent])
        if user_name:
            response = response.replace("!", f", {user_name}!")
        
        print(f"ChatBot: {response}")

# Run the chatbot
if __name__ == "__main__":
    chatbot_interface()
